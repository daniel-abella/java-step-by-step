<?xml version="1.0" encoding="UTF-8"?>
<project name="wtp1" default="compile">

	<property environment="env" />
	<property name="kad.libs" value="${env.KAD_LIBS}" />
	<property name="tomcat.deployer.home" value="${env.CATALINA_HOME}-deployer" />
	<property file="${kad.libs}/kad-libs.properties" />

	<!-- Configure the directory into which the web application is built -->
	<property name="build" value="target" />
	<property name="src.dir" location="src" />

	<!-- Configure the folder and context path for this application -->
	<property name="webapp" value="WebContent" />
	<property name="path" value="/${ant.project.name}" />

	<!-- Configure properties to access the Manager application -->
	<property name="url" value="http://localhost:8080/manager" />
	<property name="username" value="admin" />
	<property name="password" value="admin" />

	<!-- Acrescentar arquivos do classpath em WEB-INF/lib -->

	<property name="webapp.path" value="${build}/webapp${path}" />

	<path id="tomcat.deployer.classpath">
		<fileset dir="${tomcat.deployer.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Bibliotecas a serem compiadas para WEB-INF/lib -->
	<path id="libs.classpath">
		<pathelement location="${hsqldb.jar}" />
	</path>

	<!-- Configure the custom Ant tasks for the Manager application -->
	<taskdef resource="org/apache/catalina/ant/catalina.tasks" classpathref="tomcat.deployer.classpath" />

	<!-- Executable Targets -->
	<target name="clean" description="Removes build directory">
		<delete dir="${build}" />
	</target>

	<target name="compile" description="Compile web application" depends="clean">

		<copy todir="${webapp.path}">
			<fileset dir="${webapp}" />
		</copy>

		<jasper validateXml="false" uriroot="${webapp.path}" webXmlFragment="${webapp.path}/WEB-INF/generated_web.xml" addWebXmlMappings="true" outputDir="${webapp.path}/WEB-INF/classes" />

		<!-- <validator path="${webapp.path}" /> -->

		<mkdir dir="${webapp.path}/WEB-INF/classes" />
		<mkdir dir="${webapp.path}/WEB-INF/lib" />

		<copy todir="${webapp.path}/WEB-INF/lib" flatten="true">
			<path refid="libs.classpath" />
		</copy>

		<javac destdir="${webapp.path}/WEB-INF/classes" optimize="off" debug="${compile.debug}" deprecation="${compile.deprecation}" failonerror="false" srcdir="${webapp.path}/WEB-INF/classes:${src.dir}" encoding="UTF-8" excludes="**/*.smap">
			<classpath>
				<fileset dir="${webapp.path}/WEB-INF/lib">
					<include name="*.jar" />
				</fileset>
				<path refid="tomcat.deployer.classpath" />
			</classpath>
			<include name="**" />
			<exclude name="tags/**" />
		</javac>

		<jar destfile="${webapp.path}.war" basedir="${webapp.path}" />

	</target>

	<!-- TOMCAT (alvos)                                                    -->
	<!-- ================================================================= -->
	<!-- deploy   : instala a aplicação no Tomcat                          -->
	<!-- undeploy : desinstala a aplicação                                 -->
	<!-- start    : inicia a aplicação                                     -->
	<!-- stop     : para a aplicação                                       -->
	<!-- reload   : executa classe (argumento -Dclasse=<nomeClasse>)       -->
	<!-- ================================================================= -->

	<target name="deploy" description="Deploy web application">
		<deploy url="${url}" username="${username}" password="${password}" path="${path}" war="${webapp.path}.war" update="true" />
	</target>

	<target name="undeploy" description="Undeploy web application">
		<undeploy url="${url}" username="${username}" password="${password}" path="${path}" />
	</target>

	<!-- Webapp lifecycle control -->
	<target name="start" description="Start web application">
		<start url="${url}" username="${username}" password="${password}" path="${path}" />
	</target>

	<target name="reload" description="Reload web application">
		<reload url="${url}" username="${username}" password="${password}" path="${path}" />
	</target>

	<target name="stop" description="Stop web application">
		<stop url="${url}" username="${username}" password="${password}" path="${path}" />
	</target>

</project>
